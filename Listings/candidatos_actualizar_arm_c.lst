


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Codigo, CODE
    2 00000000                 EXPORT           candidatos_actualizar_arm_c
    3 00000000                 IMPORT           candidatos_propagar_c
    4 00000000                 PRESERVE8        {TRUE}
    5 00000000                 ENTRY
    6 00000000         
    7 00000000         candidatos_actualizar_arm_c
    8 00000000 E92D4BF0        PUSH{r4-r9,      FP, LR}
    9 00000004 E1A04000        mov              r4, r0      ; r4 = @cuadricula
   10 00000008 E3A05000        mov              r5, #0      ; r5 = celdas vacia
                                                            s
   11 0000000C E3A06000        mov              r6, #0      ; r6 = i = 0
   12 00000010         
   13 00000010         ; borramos los candidatos de todo el sudoku
   14 00000010         Filas_1
   15 00000010 E3560009        cmp              r6, #9
   16 00000014 0A00000B        beq              finB1_1
   17 00000018 E3A07000        mov              r7, #0      ; r7 = j = 0
   18 0000001C         Columnas_1
   19 0000001C E3570009        cmp              r7, #9
   20 00000020 0A000006        beq              finB2_1
   21 00000024 E0848286        add              r8, r4, r6, LSL #5 ; r8 = @base
                                                             + i * 16 
   22 00000028 E0888087        add              r8, r8, r7, LSL #1 ; r8 = (@bas
                                                            e + i * 16) + j * 2
                                                            
   23 0000002C E1D890B0        ldrh             r9, [r8]    ; r9 = cuadricula[i
                                                            ][j]
   24 00000030 E209907F        and              r9, r9, #0x0000007F ; r9 = r9 A
                                                            ND #0x0000007F, pon
                                                            emos todos los bits
                                                             de candidatos a 0
   25 00000034 E1C890B0        strh             r9, [r8]
   26 00000038 E2877001        add              r7, r7, #1  ; j++
   27 0000003C EAFFFFF6        b                Columnas_1
   28 00000040         finB2_1
   29 00000040 E2866001        add              r6, r6, #1  ; i++
   30 00000044 EAFFFFF1        b                Filas_1
   31 00000048         finB1_1
   32 00000048         
   33 00000048         ; propagamos los candidatos
   34 00000048         ; contamos celdas vacias
   35 00000048         
   36 00000048 E3A06000        mov              r6, #0      ; i = 0
   37 0000004C         Filas_2
   38 0000004C E3560009        cmp              r6, #9
   39 00000050 0A000010        beq              finB1_2
   40 00000054 E3A07000        mov              r7, #0      ; r7 = j = 0
   41 00000058         Columnas_2
   42 00000058 E3570009        cmp              r7, #9
   43 0000005C 0A00000B        beq              finB2_2
   44 00000060 E0848286        add              r8, r4, r6, LSL #5 ; r8 = @base
                                                             + i * 16 
   45 00000064 E0888087        add              r8, r8, r7, LSL #1 ; r8 = (@bas
                                                            e + i * 16) + j * 2
                                                            
   46 00000068 E1D890B0        ldrh             r9, [r8]    ; r9 = celda[i][j]
   47 0000006C E209900F        and              r9, r9, #0x0000000f 
                                                            ; r9 = valor celda



ARM Macro Assembler    Page 2 


   48 00000070 E3590000        cmp              r9, #0
   49 00000074         ; si el valor es 0 contamos una celda vacia
   50 00000074 02855001        addeq            r5, r5, #1  ; celdas_vacias++
   51 00000078         ; si no, propagamos el candidato
   52 00000078 11A00004        movne            r0, r4      ; r0 = @base
   53 0000007C 11A01006        movne            r1, r6      ; r1 = i
   54 00000080 11A02007        movne            r2, r7      ; r2 = j
   55 00000084 1BFFFFFE        blne             candidatos_propagar_c
   56 00000088 E2877001        add              r7, r7, #1  ; j++
   57 0000008C EAFFFFF1        b                Columnas_2
   58 00000090         finB2_2
   59 00000090 E2866001        add              r6, r6, #1  ; i++
   60 00000094 EAFFFFEC        b                Filas_2
   61 00000098         finB1_2
   62 00000098         
   63 00000098         ; devolvemos el numero de celdas vacias
   64 00000098 E1A00005        mov              r0, r5      ; r5 = celdas_vacia
                                                            s
   65 0000009C E8BD8BF0        POP{r4-r9,       FP, PC}
   66 000000A0                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\candidatos_actualizar_arm_c.d -o.\objects\candidatos_actualizar_arm_c.o 
-IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\P
hilips --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --l
ist=.\listings\candidatos_actualizar_arm_c.lst candidatos_actualizar_arm_c.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Codigo 00000000

Symbol: Codigo
   Definitions
      At line 1 in file candidatos_actualizar_arm_c.s
   Uses
      None
Comment: Codigo unused
Columnas_1 0000001C

Symbol: Columnas_1
   Definitions
      At line 18 in file candidatos_actualizar_arm_c.s
   Uses
      At line 27 in file candidatos_actualizar_arm_c.s
Comment: Columnas_1 used once
Columnas_2 00000058

Symbol: Columnas_2
   Definitions
      At line 41 in file candidatos_actualizar_arm_c.s
   Uses
      At line 57 in file candidatos_actualizar_arm_c.s
Comment: Columnas_2 used once
Filas_1 00000010

Symbol: Filas_1
   Definitions
      At line 14 in file candidatos_actualizar_arm_c.s
   Uses
      At line 30 in file candidatos_actualizar_arm_c.s
Comment: Filas_1 used once
Filas_2 0000004C

Symbol: Filas_2
   Definitions
      At line 37 in file candidatos_actualizar_arm_c.s
   Uses
      At line 60 in file candidatos_actualizar_arm_c.s
Comment: Filas_2 used once
candidatos_actualizar_arm_c 00000000

Symbol: candidatos_actualizar_arm_c
   Definitions
      At line 7 in file candidatos_actualizar_arm_c.s
   Uses
      At line 2 in file candidatos_actualizar_arm_c.s
Comment: candidatos_actualizar_arm_c used once
finB1_1 00000048

Symbol: finB1_1
   Definitions
      At line 31 in file candidatos_actualizar_arm_c.s
   Uses
      At line 16 in file candidatos_actualizar_arm_c.s
Comment: finB1_1 used once
finB1_2 00000098

Symbol: finB1_2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 61 in file candidatos_actualizar_arm_c.s
   Uses
      At line 39 in file candidatos_actualizar_arm_c.s
Comment: finB1_2 used once
finB2_1 00000040

Symbol: finB2_1
   Definitions
      At line 28 in file candidatos_actualizar_arm_c.s
   Uses
      At line 20 in file candidatos_actualizar_arm_c.s
Comment: finB2_1 used once
finB2_2 00000090

Symbol: finB2_2
   Definitions
      At line 58 in file candidatos_actualizar_arm_c.s
   Uses
      At line 43 in file candidatos_actualizar_arm_c.s
Comment: finB2_2 used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

candidatos_propagar_c 00000000

Symbol: candidatos_propagar_c
   Definitions
      At line 3 in file candidatos_actualizar_arm_c.s
   Uses
      At line 55 in file candidatos_actualizar_arm_c.s
Comment: candidatos_propagar_c used once
1 symbol
343 symbols in table
