


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             datos, DATA
    2 00000000 00 00 00 
              03 03 03 
              06 06 06 vector  DCB              0, 0, 0, 3, 3, 3, 6, 6, 6
    3 00000009 00 00 00        ALIGN            4
    4 0000000C         
    5 0000000C                 AREA             Codigo, CODE
    6 00000000                 EXPORT           candidatos_propagar_arm
    7 00000000                 PRESERVE8        {TRUE}
    8 00000000         
    9 00000000         ENTRY
   10 00000000         
   11 00000000         candidatos_propagar_arm
   12 00000000 E92D4FF0        PUSH{r4-r10,     FP ,LR}
   13 00000004         ; r0 = @base cuadricula
   14 00000004         ; r1 = fila
   15 00000004         ; r2 = columna
   16 00000004         
   17 00000004 E3A07000        mov              r7, #0      ; r7 = i
   18 00000008 E0808281        add              r8, r0, r1, LSL #5 ; r8 = @cuad
                                                            ricula[fila][0]
   19 0000000C E0809082        add              r9, r0, r2, LSL #1 ; r9 = @cuad
                                                            ricula[0][columna]
   20 00000010 E088A082        add              r10, r8, r2, LSL #1 ; r10 = @cu
                                                            adricula[fila][colu
                                                            mna] 
   21 00000014 E1DAA0B0        ldrh             r10, [r10]  ; r10 = celda
   22 00000018 E20AA00F        and              r10, r10, #0x000f 
                                                            ; r10 = valor celda
                                                            
   23 0000001C E28AA006        add              r10, r10, #6 ; r10 = valor + BI
                                                            T_CANDIDATOS - 1
   24 00000020 E3A05001        mov              r5, #1      ; r5 = 1
   25 00000024         
   26 00000024         ; propagamos el candidato en la fila y la columna
   27 00000024         BUCLE
   28 00000024 E3570009        cmp              r7, #9
   29 00000028 0A000007        beq              finBUC
   30 0000002C E1D860B0        ldrh             r6, [r8]
   31 00000030 E1866A15        orr              r6, r6, r5, LSL r10 ; r6 = cuad
                                                            ricula[fila][i] | (
                                                            #1 << r10)
   32 00000034 E0C860B2        strh             r6, [r8], #2 ; guardamos r6 en 
                                                            @r8 con un postincr
                                                            emento de 2
   33 00000038 E1D960B0        ldrh             r6, [r9]
   34 0000003C E1866A15        orr              r6, r6, r5, LSL r10 ; r6 = cuad
                                                            ricula[i][columna] 
                                                            | (#1 << r10)
   35 00000040 E0C962B0        strh             r6, [r9], #32 ; guardamos r6 en
                                                             @r9 con un postinc
                                                            remento de 32
   36 00000044 E2877001        add              r7, r7, #1  ; i++
   37 00000048 EAFFFFF5        b                BUCLE
   38 0000004C         finBUC
   39 0000004C         
   40 0000004C E59F9048        LDR              r9, =vector ; r9 = @vector
   41 00000050 E7D97001        ldrb             r7, [r9, r1] ; r7 = vector[fila
                                                            ] = init_i



ARM Macro Assembler    Page 2 


   42 00000054 E7D98002        ldrb             r8, [r9, r2] ; r8 = vector[colu
                                                            mna] = init_j
   43 00000058 E0809287        add              r9, r0, r7, LSL #5 ; @cuadricul
                                                            a[init_i][0]
   44 0000005C E0899088        add              r9, r9, r8, LSL #1 ; @cuadricul
                                                            a[init_i][init_j]
   45 00000060 E3A07000        mov              r7, #0      ; r7 = i
   46 00000064         
   47 00000064         ; propagamos el candidato en la region
   48 00000064         BUC_I
   49 00000064 E3570003        cmp              r7, #3
   50 00000068 0A00000A        beq              finBUC_I
   51 0000006C E3A08000        mov              r8, #0      ; r8 = j = 0
   52 00000070 E0896287        add              r6, r9, r7, LSL #5 ; r6 = @cuad
                                                            ricula[init_i + i][
                                                            init_j]
   53 00000074         BUC_J
   54 00000074 E3580003        cmp              r8, #3
   55 00000078 0A000004        beq              finBUC_J
   56 0000007C E1D640B0        ldrh             r4, [r6]    ; r4 = @cuadricula[
                                                            init_i + i][init_j 
                                                            + j]
   57 00000080 E1844A15        orr              r4, r4, r5, LSL r10 ; r4 = cuad
                                                            ricula[fila][i] | (
                                                            #1 << r10)
   58 00000084 E0C640B2        strh             r4, [r6], #2 ; guardamos r4 en 
                                                            @r6 con un postincr
                                                            emento de 2 
   59 00000088 E2888001        add              r8, r8, #1  ; j++
   60 0000008C EAFFFFF8        b                BUC_J
   61 00000090         finBUC_J
   62 00000090 E2877001        add              r7, r7, #1  ; i++
   63 00000094 EAFFFFF2        b                BUC_I
   64 00000098         finBUC_I
   65 00000098 E8BD8FF0        POP{r4-r10,      FP, PC}
   66 0000009C                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\candidatos_propagar_arm.d -o.\objects\candidatos_propagar_arm.o -IC:\Kei
l_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips -
-predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --list=.\li
stings\candidatos_propagar_arm.lst candidatos_propagar_arm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

datos 00000000

Symbol: datos
   Definitions
      At line 1 in file candidatos_propagar_arm.s
   Uses
      None
Comment: datos unused
vector 00000000

Symbol: vector
   Definitions
      At line 2 in file candidatos_propagar_arm.s
   Uses
      At line 40 in file candidatos_propagar_arm.s
Comment: vector used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BUCLE 00000024

Symbol: BUCLE
   Definitions
      At line 27 in file candidatos_propagar_arm.s
   Uses
      At line 37 in file candidatos_propagar_arm.s
Comment: BUCLE used once
BUC_I 00000064

Symbol: BUC_I
   Definitions
      At line 48 in file candidatos_propagar_arm.s
   Uses
      At line 63 in file candidatos_propagar_arm.s
Comment: BUC_I used once
BUC_J 00000074

Symbol: BUC_J
   Definitions
      At line 53 in file candidatos_propagar_arm.s
   Uses
      At line 60 in file candidatos_propagar_arm.s
Comment: BUC_J used once
Codigo 00000000

Symbol: Codigo
   Definitions
      At line 5 in file candidatos_propagar_arm.s
   Uses
      None
Comment: Codigo unused
ENTRY 00000000

Symbol: ENTRY
   Definitions
      At line 9 in file candidatos_propagar_arm.s
   Uses
      None
Comment: ENTRY unused
candidatos_propagar_arm 00000000

Symbol: candidatos_propagar_arm
   Definitions
      At line 11 in file candidatos_propagar_arm.s
   Uses
      At line 6 in file candidatos_propagar_arm.s
Comment: candidatos_propagar_arm used once
finBUC 0000004C

Symbol: finBUC
   Definitions
      At line 38 in file candidatos_propagar_arm.s
   Uses
      At line 29 in file candidatos_propagar_arm.s
Comment: finBUC used once
finBUC_I 00000098

Symbol: finBUC_I



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 64 in file candidatos_propagar_arm.s
   Uses
      At line 50 in file candidatos_propagar_arm.s
Comment: finBUC_I used once
finBUC_J 00000090

Symbol: finBUC_J
   Definitions
      At line 61 in file candidatos_propagar_arm.s
   Uses
      At line 55 in file candidatos_propagar_arm.s
Comment: finBUC_J used once
9 symbols
345 symbols in table
